#app/config/security.yml
security:
    encoders:
        App\Entity\User: sha512

    providers:
        username_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        api_login:
            pattern:  ^/api/v1_0/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/v1_0/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        dev:
            pattern: ^/(_(profiler|wdt))/
            security: false
        main:
            logout_on_user_change: true
            pattern: .*
            provider: username_provider
            guard:
                authenticators:
                    - App\Security\SecurityAuthenticator
            remember_me:
                secret:    "%secret%"
                lifetime:  30000000
                path:      /
                domain:    ~
            logout:        true
            anonymous:     true
            form_login:
                use_referer: true
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    access_control:
        - { path: ^/$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        #- { path: ^/ajouter, role: ROLE_ADMIN }
        - { path: ^/rule/, role: ROLE_USER }

        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }